{"ast":null,"code":"var _jsxFileName = \"/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnalyticsPage() {\n  _s();\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: []\n  });\n  useEffect(() => {\n    // Load data from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0 ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Calculate monthly stats\n    const monthlyStats = calculateMonthlyStats(feedbacks);\n\n    // Calculate customer engagement\n    const lastMonth = new Date();\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\n    const activeCustomers = new Set(feedbacks.filter(f => new Date(f.date) > lastMonth).map(f => f.customerId)).size;\n    const newCustomers = customers.filter(c => new Date(c.joinDate) > lastMonth).length;\n    const returningCustomers = customers.filter(c => c.feedbackCount > 1).length;\n\n    // Get top customers by feedback count\n    const topCustomers = [...customers].sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5);\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats,\n      customerEngagement: {\n        activeCustomers,\n        newCustomers,\n        returningCustomers\n      },\n      topCustomers\n    });\n  }, []);\n  const calculateMonthlyStats = feedbacks => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      if (!months[monthKey]) {\n        months[monthKey] = {\n          count: 0,\n          averageRating: 0,\n          totalRating: 0,\n          uniqueCustomers: new Set()\n        };\n      }\n      months[monthKey].count++;\n      months[monthKey].totalRating += feedback.rating;\n      months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n      months[monthKey].uniqueCustomers.add(feedback.customerId);\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      count: stats.count,\n      averageRating: stats.averageRating,\n      uniqueCustomers: stats.uniqueCustomers.size\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customer feedback insights and statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalCustomers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Feedbacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalFeedbacks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.averageRating.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-engagement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Engagement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"engagement-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Active Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.activeCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Last 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"New Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.newCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Last 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Returning Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.returningCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Multiple feedbacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-distribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rating Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bars\",\n        children: Object.entries(analytics.ratingDistribution).map(([rating, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-label\",\n            children: [rating, \" Stars\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-fill\",\n              style: {\n                width: `${count / analytics.totalFeedbacks * 100}%`,\n                backgroundColor: getRatingColor(rating)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-value\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, rating, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Monthly Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Feedbacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unique Customers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Average Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: analytics.monthlyStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(stat.month).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.uniqueCustomers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.averageRating.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, stat.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-cards\",\n        children: analytics.topCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customer-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"customer-email\",\n            children: customer.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customer-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Feedbacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: customer.feedbackCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Avg. Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: customer.averageRating.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"0/lcdMr6i416VqL/Oh/DmwvjRYI=\");\n_c = AnalyticsPage;\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnalyticsPage","_s","analytics","setAnalytics","totalCustomers","totalFeedbacks","averageRating","ratingDistribution","monthlyStats","customerEngagement","activeCustomers","newCustomers","returningCustomers","topCustomers","feedbacks","JSON","parse","localStorage","getItem","customers","length","reduce","acc","curr","rating","filter","f","calculateMonthlyStats","lastMonth","Date","setMonth","getMonth","Set","date","map","customerId","size","c","joinDate","feedbackCount","sort","a","b","slice","months","forEach","feedback","monthKey","getFullYear","count","totalRating","uniqueCustomers","add","Object","entries","month","stats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","style","width","backgroundColor","getRatingColor","stat","toLocaleDateString","year","customer","name","email","id","_c","colors","$RefreshReg$"],"sources":["/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\n\nfunction AnalyticsPage() {\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: []\n  });\n\n  useEffect(() => {\n    // Load data from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0\n      ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks\n      : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Calculate monthly stats\n    const monthlyStats = calculateMonthlyStats(feedbacks);\n\n    // Calculate customer engagement\n    const lastMonth = new Date();\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\n    \n    const activeCustomers = new Set(feedbacks\n      .filter(f => new Date(f.date) > lastMonth)\n      .map(f => f.customerId)\n    ).size;\n\n    const newCustomers = customers\n      .filter(c => new Date(c.joinDate) > lastMonth)\n      .length;\n\n    const returningCustomers = customers\n      .filter(c => c.feedbackCount > 1)\n      .length;\n\n    // Get top customers by feedback count\n    const topCustomers = [...customers]\n      .sort((a, b) => b.feedbackCount - a.feedbackCount)\n      .slice(0, 5);\n\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats,\n      customerEngagement: {\n        activeCustomers,\n        newCustomers,\n        returningCustomers\n      },\n      topCustomers\n    });\n  }, []);\n\n  const calculateMonthlyStats = (feedbacks) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      if (!months[monthKey]) {\n        months[monthKey] = {\n          count: 0,\n          averageRating: 0,\n          totalRating: 0,\n          uniqueCustomers: new Set()\n        };\n      }\n      months[monthKey].count++;\n      months[monthKey].totalRating += feedback.rating;\n      months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n      months[monthKey].uniqueCustomers.add(feedback.customerId);\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      count: stats.count,\n      averageRating: stats.averageRating,\n      uniqueCustomers: stats.uniqueCustomers.size\n    }));\n  };\n\n  return (\n    <div className=\"analytics-page\">\n      <header className=\"page-header\">\n        <h1>Analytics</h1>\n        <p>Customer feedback insights and statistics</p>\n      </header>\n\n      <div className=\"analytics-grid\">\n        <div className=\"analytics-card\">\n          <h3>Total Customers</h3>\n          <p className=\"stat-value\">{analytics.totalCustomers}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Total Feedbacks</h3>\n          <p className=\"stat-value\">{analytics.totalFeedbacks}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Average Rating</h3>\n          <p className=\"stat-value\">{analytics.averageRating.toFixed(1)}</p>\n        </div>\n      </div>\n\n      <div className=\"customer-engagement\">\n        <h2>Customer Engagement</h2>\n        <div className=\"engagement-grid\">\n          <div className=\"engagement-card\">\n            <h3>Active Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.activeCustomers}</p>\n            <p className=\"stat-label\">Last 30 days</p>\n          </div>\n          <div className=\"engagement-card\">\n            <h3>New Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.newCustomers}</p>\n            <p className=\"stat-label\">Last 30 days</p>\n          </div>\n          <div className=\"engagement-card\">\n            <h3>Returning Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.returningCustomers}</p>\n            <p className=\"stat-label\">Multiple feedbacks</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"rating-distribution\">\n        <h2>Rating Distribution</h2>\n        <div className=\"distribution-bars\">\n          {Object.entries(analytics.ratingDistribution).map(([rating, count]) => (\n            <div key={rating} className=\"distribution-bar\">\n              <div className=\"bar-label\">{rating} Stars</div>\n              <div className=\"bar-container\">\n                <div \n                  className=\"bar-fill\"\n                  style={{ \n                    width: `${(count / analytics.totalFeedbacks) * 100}%`,\n                    backgroundColor: getRatingColor(rating)\n                  }}\n                />\n              </div>\n              <div className=\"bar-value\">{count}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"monthly-stats\">\n        <h2>Monthly Statistics</h2>\n        <div className=\"stats-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Feedbacks</th>\n                <th>Unique Customers</th>\n                <th>Average Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {analytics.monthlyStats.map(stat => (\n                <tr key={stat.month}>\n                  <td>{new Date(stat.month).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}</td>\n                  <td>{stat.count}</td>\n                  <td>{stat.uniqueCustomers}</td>\n                  <td>{stat.averageRating.toFixed(1)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"top-customers\">\n        <h2>Top Customers</h2>\n        <div className=\"customer-cards\">\n          {analytics.topCustomers.map(customer => (\n            <div key={customer.id} className=\"customer-card\">\n              <h3>{customer.name}</h3>\n              <p className=\"customer-email\">{customer.email}</p>\n              <div className=\"customer-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Feedbacks</span>\n                  <span className=\"stat-value\">{customer.feedbackCount}</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Avg. Rating</span>\n                  <span className=\"stat-value\">{customer.averageRating.toFixed(1)}</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\n\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}