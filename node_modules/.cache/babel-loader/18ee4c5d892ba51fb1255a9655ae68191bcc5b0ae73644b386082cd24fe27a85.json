{"ast":null,"code":"var _jsxFileName = \"/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnalyticsPage() {\n  _s();\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: []\n  });\n  useEffect(() => {\n    // Load and calculate analytics from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0 ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Calculate monthly stats\n    const monthlyStats = calculateMonthlyStats(feedbacks);\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats\n    });\n  }, []);\n  const calculateMonthlyStats = feedbacks => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      if (!months[monthKey]) {\n        months[monthKey] = {\n          count: 0,\n          averageRating: 0,\n          totalRating: 0\n        };\n      }\n      months[monthKey].count++;\n      months[monthKey].totalRating += feedback.rating;\n      months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      ...stats\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customer feedback insights and statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalCustomers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Feedbacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalFeedbacks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.averageRating.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-distribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rating Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bars\",\n        children: Object.entries(analytics.ratingDistribution).map(([rating, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-label\",\n            children: [rating, \" Stars\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-fill\",\n              style: {\n                width: `${count / analytics.totalFeedbacks * 100}%`,\n                backgroundColor: getRatingColor(rating)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-value\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, rating, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Monthly Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Feedbacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Average Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: analytics.monthlyStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(stat.month).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.averageRating.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)]\n            }, stat.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"XAcB9Guswix3ZMpC/XgdNBnaymg=\");\n_c = AnalyticsPage;\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnalyticsPage","_s","analytics","setAnalytics","totalCustomers","totalFeedbacks","averageRating","ratingDistribution","monthlyStats","feedbacks","JSON","parse","localStorage","getItem","customers","length","reduce","acc","curr","rating","filter","f","calculateMonthlyStats","months","forEach","feedback","date","Date","monthKey","getFullYear","getMonth","count","totalRating","Object","entries","map","month","stats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","style","width","backgroundColor","getRatingColor","stat","toLocaleDateString","year","_c","colors","$RefreshReg$"],"sources":["/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\n\nfunction AnalyticsPage() {\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: []\n  });\n\n  useEffect(() => {\n    // Load and calculate analytics from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0\n      ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks\n      : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Calculate monthly stats\n    const monthlyStats = calculateMonthlyStats(feedbacks);\n\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats\n    });\n  }, []);\n\n  const calculateMonthlyStats = (feedbacks) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n      if (!months[monthKey]) {\n        months[monthKey] = {\n          count: 0,\n          averageRating: 0,\n          totalRating: 0\n        };\n      }\n      months[monthKey].count++;\n      months[monthKey].totalRating += feedback.rating;\n      months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      ...stats\n    }));\n  };\n\n  return (\n    <div className=\"analytics-page\">\n      <header className=\"page-header\">\n        <h1>Analytics</h1>\n        <p>Customer feedback insights and statistics</p>\n      </header>\n\n      <div className=\"analytics-grid\">\n        <div className=\"analytics-card\">\n          <h3>Total Customers</h3>\n          <p className=\"stat-value\">{analytics.totalCustomers}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Total Feedbacks</h3>\n          <p className=\"stat-value\">{analytics.totalFeedbacks}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Average Rating</h3>\n          <p className=\"stat-value\">{analytics.averageRating.toFixed(1)}</p>\n        </div>\n      </div>\n\n      <div className=\"rating-distribution\">\n        <h2>Rating Distribution</h2>\n        <div className=\"distribution-bars\">\n          {Object.entries(analytics.ratingDistribution).map(([rating, count]) => (\n            <div key={rating} className=\"distribution-bar\">\n              <div className=\"bar-label\">{rating} Stars</div>\n              <div className=\"bar-container\">\n                <div \n                  className=\"bar-fill\"\n                  style={{ \n                    width: `${(count / analytics.totalFeedbacks) * 100}%`,\n                    backgroundColor: getRatingColor(rating)\n                  }}\n                />\n              </div>\n              <div className=\"bar-value\">{count}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"monthly-stats\">\n        <h2>Monthly Statistics</h2>\n        <div className=\"stats-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Feedbacks</th>\n                <th>Average Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {analytics.monthlyStats.map(stat => (\n                <tr key={stat.month}>\n                  <td>{new Date(stat.month).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}</td>\n                  <td>{stat.count}</td>\n                  <td>{stat.averageRating.toFixed(1)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\n\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}