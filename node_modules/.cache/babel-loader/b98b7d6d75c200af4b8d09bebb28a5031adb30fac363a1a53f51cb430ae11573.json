{"ast":null,"code":"var _jsxFileName = \"/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnalyticsPage() {\n  _s();\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: [],\n    customerSatisfaction: {\n      verySatisfied: 0,\n      satisfied: 0,\n      neutral: 0,\n      dissatisfied: 0,\n      veryDissatisfied: 0\n    },\n    stateDistribution: {},\n    regionDistribution: {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    }\n  });\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    // Load data from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate state distribution\n    const stateDistribution = customers.reduce((acc, customer) => {\n      if (customer.state) {\n        acc[customer.state] = (acc[customer.state] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    // Calculate region distribution\n    const regionDistribution = customers.reduce((acc, customer) => {\n      if (customer.state) {\n        const region = getRegionFromState(customer.state);\n        acc[region] = (acc[region] || 0) + 1;\n      }\n      return acc;\n    }, {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    });\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0 ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Get all ratings with customer details\n    const allRatings = feedbacks.map(feedback => {\n      const customer = customers.find(c => c.id === feedback.customerId);\n      return {\n        id: feedback.id,\n        rating: feedback.rating,\n        message: feedback.message,\n        date: feedback.date,\n        customerName: customer ? customer.name : feedback.customerName,\n        customerEmail: customer ? customer.email : feedback.customerEmail\n      };\n    }).sort((a, b) => new Date(b.date) - new Date(a.date));\n\n    // Calculate customer satisfaction levels\n    const customerSatisfaction = {\n      verySatisfied: ratingDistribution[5],\n      satisfied: ratingDistribution[4],\n      neutral: ratingDistribution[3],\n      dissatisfied: ratingDistribution[2],\n      veryDissatisfied: ratingDistribution[1]\n    };\n\n    // Calculate monthly stats\n    const yearlyStats = calculateYearlyStats(feedbacks, selectedYear);\n\n    // Calculate customer engagement\n    const lastMonth = new Date();\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\n    const activeCustomers = new Set(feedbacks.filter(f => new Date(f.date) > lastMonth).map(f => f.customerId)).size;\n    const newCustomers = customers.filter(c => new Date(c.joinDate) > lastMonth).length;\n    const returningCustomers = customers.filter(c => c.feedbackCount > 1).length;\n\n    // Get top customers by feedback count\n    const topCustomers = [...customers].sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5);\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats: yearlyStats,\n      customerEngagement: {\n        activeCustomers,\n        newCustomers,\n        returningCustomers\n      },\n      topCustomers,\n      customerSatisfaction,\n      stateDistribution,\n      regionDistribution\n    });\n  }, [selectedYear]);\n  const calculateYearlyStats = (feedbacks, year) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      if (date.getFullYear() === year) {\n        const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n        if (!months[monthKey]) {\n          months[monthKey] = {\n            count: 0,\n            averageRating: 0,\n            totalRating: 0,\n            uniqueCustomers: new Set()\n          };\n        }\n        months[monthKey].count++;\n        months[monthKey].totalRating += feedback.rating;\n        months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n        months[monthKey].uniqueCustomers.add(feedback.customerId);\n      }\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      count: stats.count,\n      averageRating: stats.averageRating,\n      uniqueCustomers: stats.uniqueCustomers.size\n    })).sort((a, b) => new Date(a.month) - new Date(b.month));\n  };\n  const getRegionFromState = state => {\n    const regions = {\n      North: ['Delhi', 'Haryana', 'Punjab', 'Uttarakhand'],\n      South: ['Karnataka', 'Tamil Nadu', 'Andhra Pradesh', 'Kerala', 'Telangana'],\n      East: ['West Bengal', 'Bihar', 'Odisha', 'Jharkhand'],\n      West: ['Maharashtra', 'Gujarat'],\n      Central: ['Madhya Pradesh', 'Chhattisgarh', 'Uttar Pradesh', 'Rajasthan']\n    };\n    for (const [region, states] of Object.entries(regions)) {\n      if (states.includes(state)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customer feedback insights and statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalCustomers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Feedbacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: analytics.totalFeedbacks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.averageRating.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-stars\",\n            children: ['★'.repeat(Math.round(analytics.averageRating)), '☆'.repeat(5 - Math.round(analytics.averageRating))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-engagement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Engagement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"engagement-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Active Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.activeCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Last 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"New Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.newCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Last 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Returning Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerEngagement.returningCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"Multiple feedbacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-distribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rating Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bars\",\n        children: [5, 4, 3, 2, 1].map(rating => {\n          const count = analytics.ratingDistribution[rating];\n          const percentage = count / analytics.totalFeedbacks * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distribution-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"star-rating\",\n                children: '★'.repeat(rating)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rating-count\",\n                children: [count, \" ratings\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-fill\",\n                style: {\n                  width: `${percentage}%`,\n                  backgroundColor: getRatingColor(rating)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-percentage\",\n              children: [percentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, rating, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-satisfaction\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Satisfaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"satisfaction-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-card very-satisfied\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Very Satisfied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerSatisfaction.verySatisfied\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"5 Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-card satisfied\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Satisfied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerSatisfaction.satisfied\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"4 Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-card neutral\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerSatisfaction.neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"3 Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-card dissatisfied\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Dissatisfied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerSatisfaction.dissatisfied\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"2 Stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-card very-dissatisfied\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Very Dissatisfied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.customerSatisfaction.veryDissatisfied\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: \"1 Star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-ratings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Customer Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratings-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: analytics.allRatings.map(rating => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customer-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: rating.customerName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"customer-email\",\n                    children: rating.customerEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"rating-display\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"star-rating\",\n                    children: '★'.repeat(rating.rating)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-value\",\n                    children: rating.rating\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(rating.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"feedback-message\",\n                children: rating.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)]\n            }, rating.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Yearly Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(parseInt(e.target.value)),\n          children: [2020, 2021, 2022, 2023, 2024].map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Feedbacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unique Customers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Average Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: analytics.monthlyStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(stat.month).toLocaleDateString('en-US', {\n                  year: 'numeric',\n                  month: 'long'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.uniqueCustomers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: stat.averageRating.toFixed(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, stat.month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"region-distribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Region-wise Customer Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region-grid\",\n        children: Object.entries(analytics.regionDistribution).map(([region, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: [(count / analytics.totalCustomers * 100).toFixed(1), \"% of total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"state-distribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"State-wise Customer Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-grid\",\n        children: Object.entries(analytics.stateDistribution).sort((a, b) => b[1] - a[1]).map(([state, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-label\",\n            children: [(count / analytics.totalCustomers * 100).toFixed(1), \"% of total\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this)]\n        }, state, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"6VqsglnCuGSktuM+wy0Bj60LQj0=\");\n_c = AnalyticsPage;\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnalyticsPage","_s","analytics","setAnalytics","totalCustomers","totalFeedbacks","averageRating","ratingDistribution","monthlyStats","customerEngagement","activeCustomers","newCustomers","returningCustomers","topCustomers","customerSatisfaction","verySatisfied","satisfied","neutral","dissatisfied","veryDissatisfied","stateDistribution","regionDistribution","North","South","East","West","Central","selectedYear","setSelectedYear","Date","getFullYear","feedbacks","JSON","parse","localStorage","getItem","customers","reduce","acc","customer","state","region","getRegionFromState","length","curr","rating","filter","f","allRatings","map","feedback","find","c","id","customerId","message","date","customerName","name","customerEmail","email","sort","a","b","yearlyStats","calculateYearlyStats","lastMonth","setMonth","getMonth","Set","size","joinDate","feedbackCount","slice","year","months","forEach","monthKey","count","totalRating","uniqueCustomers","add","Object","entries","month","stats","regions","states","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","repeat","Math","round","percentage","style","width","backgroundColor","getRatingColor","toLocaleDateString","value","onChange","e","parseInt","target","stat","_c","colors","$RefreshReg$"],"sources":["/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\n\nfunction AnalyticsPage() {\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: [],\n    customerSatisfaction: {\n      verySatisfied: 0,\n      satisfied: 0,\n      neutral: 0,\n      dissatisfied: 0,\n      veryDissatisfied: 0\n    },\n    stateDistribution: {},\n    regionDistribution: {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    }\n  });\n\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    // Load data from localStorage\n    const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n    const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n    // Calculate state distribution\n    const stateDistribution = customers.reduce((acc, customer) => {\n      if (customer.state) {\n        acc[customer.state] = (acc[customer.state] || 0) + 1;\n      }\n      return acc;\n    }, {});\n\n    // Calculate region distribution\n    const regionDistribution = customers.reduce((acc, customer) => {\n      if (customer.state) {\n        const region = getRegionFromState(customer.state);\n        acc[region] = (acc[region] || 0) + 1;\n      }\n      return acc;\n    }, {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    });\n\n    // Calculate basic stats\n    const totalFeedbacks = feedbacks.length;\n    const totalCustomers = customers.length;\n    const averageRating = totalFeedbacks > 0\n      ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks\n      : 0;\n\n    // Calculate rating distribution\n    const ratingDistribution = {\n      5: feedbacks.filter(f => f.rating === 5).length,\n      4: feedbacks.filter(f => f.rating === 4).length,\n      3: feedbacks.filter(f => f.rating === 3).length,\n      2: feedbacks.filter(f => f.rating === 2).length,\n      1: feedbacks.filter(f => f.rating === 1).length\n    };\n\n    // Get all ratings with customer details\n    const allRatings = feedbacks.map(feedback => {\n      const customer = customers.find(c => c.id === feedback.customerId);\n      return {\n        id: feedback.id,\n        rating: feedback.rating,\n        message: feedback.message,\n        date: feedback.date,\n        customerName: customer ? customer.name : feedback.customerName,\n        customerEmail: customer ? customer.email : feedback.customerEmail\n      };\n    }).sort((a, b) => new Date(b.date) - new Date(a.date));\n\n    // Calculate customer satisfaction levels\n    const customerSatisfaction = {\n      verySatisfied: ratingDistribution[5],\n      satisfied: ratingDistribution[4],\n      neutral: ratingDistribution[3],\n      dissatisfied: ratingDistribution[2],\n      veryDissatisfied: ratingDistribution[1]\n    };\n\n    // Calculate monthly stats\n    const yearlyStats = calculateYearlyStats(feedbacks, selectedYear);\n\n    // Calculate customer engagement\n    const lastMonth = new Date();\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\n    \n    const activeCustomers = new Set(feedbacks\n      .filter(f => new Date(f.date) > lastMonth)\n      .map(f => f.customerId)\n    ).size;\n\n    const newCustomers = customers\n      .filter(c => new Date(c.joinDate) > lastMonth)\n      .length;\n\n    const returningCustomers = customers\n      .filter(c => c.feedbackCount > 1)\n      .length;\n\n    // Get top customers by feedback count\n    const topCustomers = [...customers]\n      .sort((a, b) => b.feedbackCount - a.feedbackCount)\n      .slice(0, 5);\n\n    setAnalytics({\n      totalCustomers,\n      totalFeedbacks,\n      averageRating,\n      ratingDistribution,\n      monthlyStats: yearlyStats,\n      customerEngagement: {\n        activeCustomers,\n        newCustomers,\n        returningCustomers\n      },\n      topCustomers,\n      customerSatisfaction,\n      stateDistribution,\n      regionDistribution\n    });\n  }, [selectedYear]);\n\n  const calculateYearlyStats = (feedbacks, year) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      if (date.getFullYear() === year) {\n        const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n        if (!months[monthKey]) {\n          months[monthKey] = {\n            count: 0,\n            averageRating: 0,\n            totalRating: 0,\n            uniqueCustomers: new Set()\n          };\n        }\n        months[monthKey].count++;\n        months[monthKey].totalRating += feedback.rating;\n        months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n        months[monthKey].uniqueCustomers.add(feedback.customerId);\n      }\n    });\n    return Object.entries(months)\n      .map(([month, stats]) => ({\n        month,\n        count: stats.count,\n        averageRating: stats.averageRating,\n        uniqueCustomers: stats.uniqueCustomers.size\n      }))\n      .sort((a, b) => new Date(a.month) - new Date(b.month));\n  };\n\n  const getRegionFromState = (state) => {\n    const regions = {\n      North: ['Delhi', 'Haryana', 'Punjab', 'Uttarakhand'],\n      South: ['Karnataka', 'Tamil Nadu', 'Andhra Pradesh', 'Kerala', 'Telangana'],\n      East: ['West Bengal', 'Bihar', 'Odisha', 'Jharkhand'],\n      West: ['Maharashtra', 'Gujarat'],\n      Central: ['Madhya Pradesh', 'Chhattisgarh', 'Uttar Pradesh', 'Rajasthan']\n    };\n\n    for (const [region, states] of Object.entries(regions)) {\n      if (states.includes(state)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n\n  return (\n    <div className=\"analytics-page\">\n      <header className=\"page-header\">\n        <h1>Analytics</h1>\n        <p>Customer feedback insights and statistics</p>\n      </header>\n\n      <div className=\"analytics-grid\">\n        <div className=\"analytics-card\">\n          <h3>Total Customers</h3>\n          <p className=\"stat-value\">{analytics.totalCustomers}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Total Feedbacks</h3>\n          <p className=\"stat-value\">{analytics.totalFeedbacks}</p>\n        </div>\n        <div className=\"analytics-card\">\n          <h3>Average Rating</h3>\n          <div className=\"rating-display\">\n            <p className=\"stat-value\">{analytics.averageRating.toFixed(1)}</p>\n            <div className=\"rating-stars\">\n              {'★'.repeat(Math.round(analytics.averageRating))}\n              {'☆'.repeat(5 - Math.round(analytics.averageRating))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"customer-engagement\">\n        <h2>Customer Engagement</h2>\n        <div className=\"engagement-grid\">\n          <div className=\"engagement-card\">\n            <h3>Active Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.activeCustomers}</p>\n            <p className=\"stat-label\">Last 30 days</p>\n          </div>\n          <div className=\"engagement-card\">\n            <h3>New Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.newCustomers}</p>\n            <p className=\"stat-label\">Last 30 days</p>\n          </div>\n          <div className=\"engagement-card\">\n            <h3>Returning Customers</h3>\n            <p className=\"stat-value\">{analytics.customerEngagement.returningCustomers}</p>\n            <p className=\"stat-label\">Multiple feedbacks</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"rating-distribution\">\n        <h2>Rating Distribution</h2>\n        <div className=\"distribution-bars\">\n          {[5, 4, 3, 2, 1].map(rating => {\n            const count = analytics.ratingDistribution[rating];\n            const percentage = (count / analytics.totalFeedbacks) * 100;\n            return (\n              <div key={rating} className=\"distribution-bar\">\n                <div className=\"bar-label\">\n                  <span className=\"star-rating\">{'★'.repeat(rating)}</span>\n                  <span className=\"rating-count\">{count} ratings</span>\n                </div>\n                <div className=\"bar-container\">\n                  <div \n                    className=\"bar-fill\"\n                    style={{ \n                      width: `${percentage}%`,\n                      backgroundColor: getRatingColor(rating)\n                    }}\n                  />\n                </div>\n                <div className=\"bar-percentage\">{percentage.toFixed(1)}%</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"customer-satisfaction\">\n        <h2>Customer Satisfaction</h2>\n        <div className=\"satisfaction-grid\">\n          <div className=\"satisfaction-card very-satisfied\">\n            <h3>Very Satisfied</h3>\n            <p className=\"stat-value\">{analytics.customerSatisfaction.verySatisfied}</p>\n            <p className=\"stat-label\">5 Stars</p>\n          </div>\n          <div className=\"satisfaction-card satisfied\">\n            <h3>Satisfied</h3>\n            <p className=\"stat-value\">{analytics.customerSatisfaction.satisfied}</p>\n            <p className=\"stat-label\">4 Stars</p>\n          </div>\n          <div className=\"satisfaction-card neutral\">\n            <h3>Neutral</h3>\n            <p className=\"stat-value\">{analytics.customerSatisfaction.neutral}</p>\n            <p className=\"stat-label\">3 Stars</p>\n          </div>\n          <div className=\"satisfaction-card dissatisfied\">\n            <h3>Dissatisfied</h3>\n            <p className=\"stat-value\">{analytics.customerSatisfaction.dissatisfied}</p>\n            <p className=\"stat-label\">2 Stars</p>\n          </div>\n          <div className=\"satisfaction-card very-dissatisfied\">\n            <h3>Very Dissatisfied</h3>\n            <p className=\"stat-value\">{analytics.customerSatisfaction.veryDissatisfied}</p>\n            <p className=\"stat-label\">1 Star</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"all-ratings\">\n        <h2>All Customer Ratings</h2>\n        <div className=\"ratings-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Customer</th>\n                <th>Rating</th>\n                <th>Date</th>\n                <th>Feedback</th>\n              </tr>\n            </thead>\n            <tbody>\n              {analytics.allRatings.map(rating => (\n                <tr key={rating.id}>\n                  <td>\n                    <div className=\"customer-info\">\n                      <strong>{rating.customerName}</strong>\n                      <span className=\"customer-email\">{rating.customerEmail}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"rating-display\">\n                      <span className=\"star-rating\">{'★'.repeat(rating.rating)}</span>\n                      <span className=\"rating-value\">{rating.rating}</span>\n                    </div>\n                  </td>\n                  <td>{new Date(rating.date).toLocaleDateString()}</td>\n                  <td className=\"feedback-message\">{rating.message}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"monthly-stats\">\n        <h2>Yearly Statistics</h2>\n        <div className=\"year-selector\">\n          <select \n            value={selectedYear} \n            onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n          >\n            {[2020, 2021, 2022, 2023, 2024].map(year => (\n              <option key={year} value={year}>{year}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"stats-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Feedbacks</th>\n                <th>Unique Customers</th>\n                <th>Average Rating</th>\n              </tr>\n            </thead>\n            <tbody>\n              {analytics.monthlyStats.map(stat => (\n                <tr key={stat.month}>\n                  <td>{new Date(stat.month).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}</td>\n                  <td>{stat.count}</td>\n                  <td>{stat.uniqueCustomers}</td>\n                  <td>{stat.averageRating.toFixed(1)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div className=\"region-distribution\">\n        <h2>Region-wise Customer Distribution</h2>\n        <div className=\"region-grid\">\n          {Object.entries(analytics.regionDistribution).map(([region, count]) => (\n            <div key={region} className=\"region-card\">\n              <h3>{region}</h3>\n              <p className=\"stat-value\">{count}</p>\n              <p className=\"stat-label\">\n                {((count / analytics.totalCustomers) * 100).toFixed(1)}% of total\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"state-distribution\">\n        <h2>State-wise Customer Distribution</h2>\n        <div className=\"state-grid\">\n          {Object.entries(analytics.stateDistribution)\n            .sort((a, b) => b[1] - a[1])\n            .map(([state, count]) => (\n              <div key={state} className=\"state-card\">\n                <h3>{state}</h3>\n                <p className=\"stat-value\">{count}</p>\n                <p className=\"stat-label\">\n                  {((count / analytics.totalCustomers) * 100).toFixed(1)}% of total\n                </p>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\n\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}