{"ast":null,"code":"var _jsxFileName = \"/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnalyticsPage() {\n  _s();\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: [],\n    customerSatisfaction: {\n      verySatisfied: 0,\n      satisfied: 0,\n      neutral: 0,\n      dissatisfied: 0,\n      veryDissatisfied: 0\n    },\n    stateDistribution: {},\n    regionDistribution: {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    }\n  });\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      // Load data from localStorage\n      const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n      const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n      // Calculate state distribution\n      const stateDistribution = customers.reduce((acc, customer) => {\n        if (customer.state) {\n          acc[customer.state] = (acc[customer.state] || 0) + 1;\n        }\n        return acc;\n      }, {});\n\n      // Calculate region distribution\n      const regionDistribution = customers.reduce((acc, customer) => {\n        if (customer.state) {\n          const region = getRegionFromState(customer.state);\n          acc[region] = (acc[region] || 0) + 1;\n        }\n        return acc;\n      }, {\n        North: 0,\n        South: 0,\n        East: 0,\n        West: 0,\n        Central: 0\n      });\n\n      // Calculate basic stats\n      const totalFeedbacks = feedbacks.length;\n      const totalCustomers = customers.length;\n      const averageRating = totalFeedbacks > 0 ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks : 0;\n\n      // Calculate rating distribution\n      const ratingDistribution = {\n        5: feedbacks.filter(f => f.rating === 5).length,\n        4: feedbacks.filter(f => f.rating === 4).length,\n        3: feedbacks.filter(f => f.rating === 3).length,\n        2: feedbacks.filter(f => f.rating === 2).length,\n        1: feedbacks.filter(f => f.rating === 1).length\n      };\n\n      // Calculate customer satisfaction levels\n      const customerSatisfaction = {\n        verySatisfied: ratingDistribution[5],\n        satisfied: ratingDistribution[4],\n        neutral: ratingDistribution[3],\n        dissatisfied: ratingDistribution[2],\n        veryDissatisfied: ratingDistribution[1]\n      };\n\n      // Calculate yearly stats\n      const yearlyStats = calculateYearlyStats(feedbacks, selectedYear);\n\n      // Calculate customer engagement\n      const lastMonth = new Date();\n      lastMonth.setMonth(lastMonth.getMonth() - 1);\n      const activeCustomers = new Set(feedbacks.filter(f => new Date(f.date) > lastMonth).map(f => f.customerId)).size;\n      const newCustomers = customers.filter(c => new Date(c.joinDate) > lastMonth).length;\n      const returningCustomers = customers.filter(c => c.feedbackCount > 1).length;\n\n      // Get top customers by feedback count\n      const topCustomers = [...customers].sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5);\n      setAnalytics({\n        totalCustomers,\n        totalFeedbacks,\n        averageRating,\n        ratingDistribution,\n        monthlyStats: yearlyStats,\n        customerEngagement: {\n          activeCustomers,\n          newCustomers,\n          returningCustomers\n        },\n        topCustomers,\n        customerSatisfaction,\n        stateDistribution,\n        regionDistribution\n      });\n    } catch (error) {\n      console.error('Error loading analytics:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedYear]);\n  const calculateYearlyStats = (feedbacks, year) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      if (date.getFullYear() === year) {\n        const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n        if (!months[monthKey]) {\n          months[monthKey] = {\n            count: 0,\n            averageRating: 0,\n            totalRating: 0,\n            uniqueCustomers: new Set()\n          };\n        }\n        months[monthKey].count++;\n        months[monthKey].totalRating += feedback.rating;\n        months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n        months[monthKey].uniqueCustomers.add(feedback.customerId);\n      }\n    });\n    return Object.entries(months).map(([month, stats]) => ({\n      month,\n      count: stats.count,\n      averageRating: stats.averageRating,\n      uniqueCustomers: stats.uniqueCustomers.size\n    })).sort((a, b) => new Date(a.month) - new Date(b.month));\n  };\n  const getRegionFromState = state => {\n    const regions = {\n      North: ['Delhi', 'Haryana', 'Punjab', 'Uttarakhand'],\n      South: ['Karnataka', 'Tamil Nadu', 'Andhra Pradesh', 'Kerala', 'Telangana'],\n      East: ['West Bengal', 'Bihar', 'Odisha', 'Jharkhand'],\n      West: ['Maharashtra', 'Gujarat'],\n      Central: ['Madhya Pradesh', 'Chhattisgarh', 'Uttar Pradesh', 'Rajasthan']\n    };\n    for (const [region, states] of Object.entries(regions)) {\n      if (states.includes(state)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Customer feedback insights and statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading analytics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.totalCustomers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Feedbacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"stat-value\",\n            children: analytics.totalFeedbacks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.averageRating.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-stars\",\n              children: ['★'.repeat(Math.round(analytics.averageRating)), '☆'.repeat(5 - Math.round(analytics.averageRating))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-engagement\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Customer Engagement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"engagement-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"engagement-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Active Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerEngagement.activeCustomers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"Last 30 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"engagement-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"New Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerEngagement.newCustomers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"Last 30 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"engagement-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Returning Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerEngagement.returningCustomers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"Multiple feedbacks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-distribution\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rating Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-bars\",\n          children: [5, 4, 3, 2, 1].map(rating => {\n            const count = analytics.ratingDistribution[rating];\n            const percentage = count / analytics.totalFeedbacks * 100;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"distribution-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"star-rating\",\n                  children: '★'.repeat(rating)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"rating-count\",\n                  children: [count, \" ratings\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar-fill\",\n                  style: {\n                    width: `${percentage}%`,\n                    backgroundColor: getRatingColor(rating)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-percentage\",\n                children: [percentage.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, rating, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-satisfaction\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Customer Satisfaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"satisfaction-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"satisfaction-card very-satisfied\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Very Satisfied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerSatisfaction.verySatisfied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"5 Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"satisfaction-card satisfied\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Satisfied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerSatisfaction.satisfied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"4 Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"satisfaction-card neutral\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Neutral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerSatisfaction.neutral\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"3 Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"satisfaction-card dissatisfied\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Dissatisfied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerSatisfaction.dissatisfied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"2 Stars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"satisfaction-card very-dissatisfied\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Very Dissatisfied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: analytics.customerSatisfaction.veryDissatisfied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: \"1 Star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthly-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Yearly Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-selector\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedYear,\n            onChange: e => setSelectedYear(parseInt(e.target.value)),\n            children: [2020, 2021, 2022, 2023, 2024].map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Feedbacks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Unique Customers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Average Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: analytics.monthlyStats && analytics.monthlyStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(stat.month).toLocaleDateString('en-US', {\n                    year: 'numeric',\n                    month: 'long'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stat.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stat.uniqueCustomers\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stat.averageRating.toFixed(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)]\n              }, stat.month, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region-distribution\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Region-wise Customer Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-grid\",\n          children: Object.entries(analytics.regionDistribution).map(([region, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"region-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: [(count / analytics.totalCustomers * 100).toFixed(1), \"% of total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)]\n          }, region, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"state-distribution\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"State-wise Customer Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"state-grid\",\n          children: Object.entries(analytics.stateDistribution).sort((a, b) => b[1] - a[1]).map(([state, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"state-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-value\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-label\",\n              children: [(count / analytics.totalCustomers * 100).toFixed(1), \"% of total\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)]\n          }, state, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalyticsPage, \"7ZfZ3Wpu3eXRQgWFAZaRuiU3lGo=\");\n_c = AnalyticsPage;\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AnalyticsPage","_s","analytics","setAnalytics","totalCustomers","totalFeedbacks","averageRating","ratingDistribution","monthlyStats","customerEngagement","activeCustomers","newCustomers","returningCustomers","topCustomers","customerSatisfaction","verySatisfied","satisfied","neutral","dissatisfied","veryDissatisfied","stateDistribution","regionDistribution","North","South","East","West","Central","selectedYear","setSelectedYear","Date","getFullYear","isLoading","setIsLoading","feedbacks","JSON","parse","localStorage","getItem","customers","reduce","acc","customer","state","region","getRegionFromState","length","curr","rating","filter","f","yearlyStats","calculateYearlyStats","lastMonth","setMonth","getMonth","Set","date","map","customerId","size","c","joinDate","feedbackCount","sort","a","b","slice","error","console","year","months","forEach","feedback","monthKey","count","totalRating","uniqueCustomers","add","Object","entries","month","stats","regions","states","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","repeat","Math","round","percentage","style","width","backgroundColor","getRatingColor","value","onChange","e","parseInt","target","stat","toLocaleDateString","_c","colors","$RefreshReg$"],"sources":["/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './AnalyticsPage.css';\n\nfunction AnalyticsPage() {\n  const [analytics, setAnalytics] = useState({\n    totalCustomers: 0,\n    totalFeedbacks: 0,\n    averageRating: 0,\n    ratingDistribution: {\n      5: 0,\n      4: 0,\n      3: 0,\n      2: 0,\n      1: 0\n    },\n    monthlyStats: [],\n    customerEngagement: {\n      activeCustomers: 0,\n      newCustomers: 0,\n      returningCustomers: 0\n    },\n    topCustomers: [],\n    customerSatisfaction: {\n      verySatisfied: 0,\n      satisfied: 0,\n      neutral: 0,\n      dissatisfied: 0,\n      veryDissatisfied: 0\n    },\n    stateDistribution: {},\n    regionDistribution: {\n      North: 0,\n      South: 0,\n      East: 0,\n      West: 0,\n      Central: 0\n    }\n  });\n\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      // Load data from localStorage\n      const feedbacks = JSON.parse(localStorage.getItem('feedbacks') || '[]');\n      const customers = JSON.parse(localStorage.getItem('customers') || '[]');\n\n      // Calculate state distribution\n      const stateDistribution = customers.reduce((acc, customer) => {\n        if (customer.state) {\n          acc[customer.state] = (acc[customer.state] || 0) + 1;\n        }\n        return acc;\n      }, {});\n\n      // Calculate region distribution\n      const regionDistribution = customers.reduce((acc, customer) => {\n        if (customer.state) {\n          const region = getRegionFromState(customer.state);\n          acc[region] = (acc[region] || 0) + 1;\n        }\n        return acc;\n      }, {\n        North: 0,\n        South: 0,\n        East: 0,\n        West: 0,\n        Central: 0\n      });\n\n      // Calculate basic stats\n      const totalFeedbacks = feedbacks.length;\n      const totalCustomers = customers.length;\n      const averageRating = totalFeedbacks > 0\n        ? feedbacks.reduce((acc, curr) => acc + curr.rating, 0) / totalFeedbacks\n        : 0;\n\n      // Calculate rating distribution\n      const ratingDistribution = {\n        5: feedbacks.filter(f => f.rating === 5).length,\n        4: feedbacks.filter(f => f.rating === 4).length,\n        3: feedbacks.filter(f => f.rating === 3).length,\n        2: feedbacks.filter(f => f.rating === 2).length,\n        1: feedbacks.filter(f => f.rating === 1).length\n      };\n\n      // Calculate customer satisfaction levels\n      const customerSatisfaction = {\n        verySatisfied: ratingDistribution[5],\n        satisfied: ratingDistribution[4],\n        neutral: ratingDistribution[3],\n        dissatisfied: ratingDistribution[2],\n        veryDissatisfied: ratingDistribution[1]\n      };\n\n      // Calculate yearly stats\n      const yearlyStats = calculateYearlyStats(feedbacks, selectedYear);\n\n      // Calculate customer engagement\n      const lastMonth = new Date();\n      lastMonth.setMonth(lastMonth.getMonth() - 1);\n      \n      const activeCustomers = new Set(feedbacks\n        .filter(f => new Date(f.date) > lastMonth)\n        .map(f => f.customerId)\n      ).size;\n\n      const newCustomers = customers\n        .filter(c => new Date(c.joinDate) > lastMonth)\n        .length;\n\n      const returningCustomers = customers\n        .filter(c => c.feedbackCount > 1)\n        .length;\n\n      // Get top customers by feedback count\n      const topCustomers = [...customers]\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 5);\n\n      setAnalytics({\n        totalCustomers,\n        totalFeedbacks,\n        averageRating,\n        ratingDistribution,\n        monthlyStats: yearlyStats,\n        customerEngagement: {\n          activeCustomers,\n          newCustomers,\n          returningCustomers\n        },\n        topCustomers,\n        customerSatisfaction,\n        stateDistribution,\n        regionDistribution\n      });\n    } catch (error) {\n      console.error('Error loading analytics:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedYear]);\n\n  const calculateYearlyStats = (feedbacks, year) => {\n    const months = {};\n    feedbacks.forEach(feedback => {\n      const date = new Date(feedback.date);\n      if (date.getFullYear() === year) {\n        const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`;\n        if (!months[monthKey]) {\n          months[monthKey] = {\n            count: 0,\n            averageRating: 0,\n            totalRating: 0,\n            uniqueCustomers: new Set()\n          };\n        }\n        months[monthKey].count++;\n        months[monthKey].totalRating += feedback.rating;\n        months[monthKey].averageRating = months[monthKey].totalRating / months[monthKey].count;\n        months[monthKey].uniqueCustomers.add(feedback.customerId);\n      }\n    });\n    return Object.entries(months)\n      .map(([month, stats]) => ({\n        month,\n        count: stats.count,\n        averageRating: stats.averageRating,\n        uniqueCustomers: stats.uniqueCustomers.size\n      }))\n      .sort((a, b) => new Date(a.month) - new Date(b.month));\n  };\n\n  const getRegionFromState = (state) => {\n    const regions = {\n      North: ['Delhi', 'Haryana', 'Punjab', 'Uttarakhand'],\n      South: ['Karnataka', 'Tamil Nadu', 'Andhra Pradesh', 'Kerala', 'Telangana'],\n      East: ['West Bengal', 'Bihar', 'Odisha', 'Jharkhand'],\n      West: ['Maharashtra', 'Gujarat'],\n      Central: ['Madhya Pradesh', 'Chhattisgarh', 'Uttar Pradesh', 'Rajasthan']\n    };\n\n    for (const [region, states] of Object.entries(regions)) {\n      if (states.includes(state)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n\n  return (\n    <div className=\"analytics-page\">\n      <header className=\"page-header\">\n        <h1>Analytics</h1>\n        <p>Customer feedback insights and statistics</p>\n      </header>\n\n      {isLoading ? (\n        <div className=\"loading\">Loading analytics...</div>\n      ) : (\n        <>\n          <div className=\"analytics-grid\">\n            <div className=\"analytics-card\">\n              <h3>Total Customers</h3>\n              <p className=\"stat-value\">{analytics.totalCustomers}</p>\n            </div>\n            <div className=\"analytics-card\">\n              <h3>Total Feedbacks</h3>\n              <p className=\"stat-value\">{analytics.totalFeedbacks}</p>\n            </div>\n            <div className=\"analytics-card\">\n              <h3>Average Rating</h3>\n              <div className=\"rating-display\">\n                <p className=\"stat-value\">{analytics.averageRating.toFixed(1)}</p>\n                <div className=\"rating-stars\">\n                  {'★'.repeat(Math.round(analytics.averageRating))}\n                  {'☆'.repeat(5 - Math.round(analytics.averageRating))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"customer-engagement\">\n            <h2>Customer Engagement</h2>\n            <div className=\"engagement-grid\">\n              <div className=\"engagement-card\">\n                <h3>Active Customers</h3>\n                <p className=\"stat-value\">{analytics.customerEngagement.activeCustomers}</p>\n                <p className=\"stat-label\">Last 30 days</p>\n              </div>\n              <div className=\"engagement-card\">\n                <h3>New Customers</h3>\n                <p className=\"stat-value\">{analytics.customerEngagement.newCustomers}</p>\n                <p className=\"stat-label\">Last 30 days</p>\n              </div>\n              <div className=\"engagement-card\">\n                <h3>Returning Customers</h3>\n                <p className=\"stat-value\">{analytics.customerEngagement.returningCustomers}</p>\n                <p className=\"stat-label\">Multiple feedbacks</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"rating-distribution\">\n            <h2>Rating Distribution</h2>\n            <div className=\"distribution-bars\">\n              {[5, 4, 3, 2, 1].map(rating => {\n                const count = analytics.ratingDistribution[rating];\n                const percentage = (count / analytics.totalFeedbacks) * 100;\n                return (\n                  <div key={rating} className=\"distribution-bar\">\n                    <div className=\"bar-label\">\n                      <span className=\"star-rating\">{'★'.repeat(rating)}</span>\n                      <span className=\"rating-count\">{count} ratings</span>\n                    </div>\n                    <div className=\"bar-container\">\n                      <div \n                        className=\"bar-fill\"\n                        style={{ \n                          width: `${percentage}%`,\n                          backgroundColor: getRatingColor(rating)\n                        }}\n                      />\n                    </div>\n                    <div className=\"bar-percentage\">{percentage.toFixed(1)}%</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <div className=\"customer-satisfaction\">\n            <h2>Customer Satisfaction</h2>\n            <div className=\"satisfaction-grid\">\n              <div className=\"satisfaction-card very-satisfied\">\n                <h3>Very Satisfied</h3>\n                <p className=\"stat-value\">{analytics.customerSatisfaction.verySatisfied}</p>\n                <p className=\"stat-label\">5 Stars</p>\n              </div>\n              <div className=\"satisfaction-card satisfied\">\n                <h3>Satisfied</h3>\n                <p className=\"stat-value\">{analytics.customerSatisfaction.satisfied}</p>\n                <p className=\"stat-label\">4 Stars</p>\n              </div>\n              <div className=\"satisfaction-card neutral\">\n                <h3>Neutral</h3>\n                <p className=\"stat-value\">{analytics.customerSatisfaction.neutral}</p>\n                <p className=\"stat-label\">3 Stars</p>\n              </div>\n              <div className=\"satisfaction-card dissatisfied\">\n                <h3>Dissatisfied</h3>\n                <p className=\"stat-value\">{analytics.customerSatisfaction.dissatisfied}</p>\n                <p className=\"stat-label\">2 Stars</p>\n              </div>\n              <div className=\"satisfaction-card very-dissatisfied\">\n                <h3>Very Dissatisfied</h3>\n                <p className=\"stat-value\">{analytics.customerSatisfaction.veryDissatisfied}</p>\n                <p className=\"stat-label\">1 Star</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"monthly-stats\">\n            <h2>Yearly Statistics</h2>\n            <div className=\"year-selector\">\n              <select \n                value={selectedYear} \n                onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n              >\n                {[2020, 2021, 2022, 2023, 2024].map(year => (\n                  <option key={year} value={year}>{year}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"stats-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Month</th>\n                    <th>Feedbacks</th>\n                    <th>Unique Customers</th>\n                    <th>Average Rating</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {analytics.monthlyStats && analytics.monthlyStats.map(stat => (\n                    <tr key={stat.month}>\n                      <td>{new Date(stat.month).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}</td>\n                      <td>{stat.count}</td>\n                      <td>{stat.uniqueCustomers}</td>\n                      <td>{stat.averageRating.toFixed(1)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"region-distribution\">\n            <h2>Region-wise Customer Distribution</h2>\n            <div className=\"region-grid\">\n              {Object.entries(analytics.regionDistribution).map(([region, count]) => (\n                <div key={region} className=\"region-card\">\n                  <h3>{region}</h3>\n                  <p className=\"stat-value\">{count}</p>\n                  <p className=\"stat-label\">\n                    {((count / analytics.totalCustomers) * 100).toFixed(1)}% of total\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"state-distribution\">\n            <h2>State-wise Customer Distribution</h2>\n            <div className=\"state-grid\">\n              {Object.entries(analytics.stateDistribution)\n                .sort((a, b) => b[1] - a[1])\n                .map(([state, count]) => (\n                  <div key={state} className=\"state-card\">\n                    <h3>{state}</h3>\n                    <p className=\"stat-value\">{count}</p>\n                    <p className=\"stat-label\">\n                      {((count / analytics.totalCustomers) * 100).toFixed(1)}% of total\n                    </p>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction getRatingColor(rating) {\n  const colors = {\n    5: '#28a745',\n    4: '#28a745',\n    3: '#ffc107',\n    2: '#dc3545',\n    1: '#dc3545'\n  };\n  return colors[rating] || '#6c757d';\n}\n\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}