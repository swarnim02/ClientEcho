{"ast":null,"code":"const firstNames = ['John', 'Emma', 'Michael', 'Sophia', 'William', 'Olivia', 'James', 'Ava', 'Alexander', 'Isabella', 'Benjamin', 'Mia', 'Elijah', 'Charlotte', 'Lucas', 'Amelia', 'Mason', 'Harper', 'Logan', 'Evelyn', 'Jacob', 'Abigail', 'Jackson', 'Emily', 'Sebastian', 'Elizabeth', 'Jack', 'Sofia', 'Owen', 'Avery'];\nconst lastNames = ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis', 'Rodriguez', 'Martinez', 'Hernandez', 'Lopez', 'Gonzalez', 'Wilson', 'Anderson', 'Thomas', 'Taylor', 'Moore', 'Jackson', 'Martin', 'Lee', 'Perez', 'Thompson', 'White', 'Harris', 'Sanchez', 'Clark', 'Ramirez', 'Lewis', 'Robinson'];\nconst domains = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com', 'icloud.com'];\nfunction generateRandomName() {\n  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n  return `${firstName} ${lastName}`;\n}\nfunction generateRandomEmail(name) {\n  const [firstName, lastName] = name.toLowerCase().split(' ');\n  const domain = domains[Math.floor(Math.random() * domains.length)];\n  return `${firstName}.${lastName}@${domain}`;\n}\nfunction generateRandomDate(start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n}\nfunction generateRandomRating() {\n  return Math.floor(Math.random() * 5) + 1;\n}\nexport function generateRandomCustomers(count) {\n  const customers = [];\n  const startDate = new Date(2020, 0, 1);\n  const endDate = new Date();\n  for (let i = 0; i < count; i++) {\n    const name = generateRandomName();\n    const joinDate = generateRandomDate(startDate, endDate);\n    const feedbackCount = Math.floor(Math.random() * 10);\n    const averageRating = feedbackCount > 0 ? (Math.random() * 2 + 3).toFixed(1) : 0;\n    customers.push({\n      id: i + 1,\n      name,\n      email: generateRandomEmail(name),\n      joinDate: joinDate.toISOString(),\n      feedbackCount,\n      averageRating: parseFloat(averageRating)\n    });\n  }\n  return customers;\n}","map":{"version":3,"names":["firstNames","lastNames","domains","generateRandomName","firstName","Math","floor","random","length","lastName","generateRandomEmail","name","toLowerCase","split","domain","generateRandomDate","start","end","Date","getTime","generateRandomRating","generateRandomCustomers","count","customers","startDate","endDate","i","joinDate","feedbackCount","averageRating","toFixed","push","id","email","toISOString","parseFloat"],"sources":["/Users/swarnimbalpande/Desktop/desktop/ClientEcho/src/utils/randomData.js"],"sourcesContent":["const firstNames = [\n  'John', 'Emma', 'Michael', 'Sophia', 'William', 'Olivia', 'James', 'Ava',\n  'Alexander', 'Isabella', 'Benjamin', 'Mia', 'Elijah', 'Charlotte', 'Lucas',\n  'Amelia', 'Mason', 'Harper', 'Logan', 'Evelyn', 'Jacob', 'Abigail', 'Jackson',\n  'Emily', 'Sebastian', 'Elizabeth', 'Jack', 'Sofia', 'Owen', 'Avery'\n];\n\nconst lastNames = [\n  'Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis',\n  'Rodriguez', 'Martinez', 'Hernandez', 'Lopez', 'Gonzalez', 'Wilson', 'Anderson',\n  'Thomas', 'Taylor', 'Moore', 'Jackson', 'Martin', 'Lee', 'Perez', 'Thompson',\n  'White', 'Harris', 'Sanchez', 'Clark', 'Ramirez', 'Lewis', 'Robinson'\n];\n\nconst domains = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com', 'icloud.com'];\n\nfunction generateRandomName() {\n  const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n  return `${firstName} ${lastName}`;\n}\n\nfunction generateRandomEmail(name) {\n  const [firstName, lastName] = name.toLowerCase().split(' ');\n  const domain = domains[Math.floor(Math.random() * domains.length)];\n  return `${firstName}.${lastName}@${domain}`;\n}\n\nfunction generateRandomDate(start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n}\n\nfunction generateRandomRating() {\n  return Math.floor(Math.random() * 5) + 1;\n}\n\nexport function generateRandomCustomers(count) {\n  const customers = [];\n  const startDate = new Date(2020, 0, 1);\n  const endDate = new Date();\n\n  for (let i = 0; i < count; i++) {\n    const name = generateRandomName();\n    const joinDate = generateRandomDate(startDate, endDate);\n    const feedbackCount = Math.floor(Math.random() * 10);\n    const averageRating = feedbackCount > 0 \n      ? (Math.random() * 2 + 3).toFixed(1) \n      : 0;\n\n    customers.push({\n      id: i + 1,\n      name,\n      email: generateRandomEmail(name),\n      joinDate: joinDate.toISOString(),\n      feedbackCount,\n      averageRating: parseFloat(averageRating)\n    });\n  }\n\n  return customers;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}